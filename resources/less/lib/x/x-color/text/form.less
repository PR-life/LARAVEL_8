@charset "UTF-8";

.Status input:invalid {
	color:var(--c-input-invalid);
}

.Form {

	input {
		color: var(--c-input);
	}
	
	input::placeholder {
		opacity: 1;
		color: var(--c-input-placeholder);
	}

	input:focus,
	input:invalid:focus,
	textarea:focus{
		color: var(--c-input-focus);
	}

	input:focus{
		.transition(color);
	}

	// input:read-only::placeholder,
	// input:read-only {
	// 	color:var(--c-input-readOnly);
	// }
	
	input:disabled::placeholder,
	input:disabled {
		color:var(--c-input-disabled);
	}


	input:out-of-range {
		color:var(--c-input-invalid);
	}


	// input:read-only {
	// 	cursor: not-allowed;
	// }

	legend {
		color: @grey;
	}

	//
	._shell.vol-Abs {
		input:focus~label,
		input:not(:placeholder-shown)~label {
			--c-text:var(--c-input-abs-active);
			sup {
				--c-text:var(--c-input-abs-active);
			}
		}

		label {
			--c-text:var(--c-input-abs);

			sup {
				--c-text:var(--c-input-sup);
			}
		}
	}

	//
	.Error > input {
		border-bottom: 1px solid var(--c-input-border-error);
	}

}
