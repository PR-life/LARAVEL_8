@charset "UTF-8";


// https://codepen.io/hexagoncircle/pen/JKPJVy
// https://codepen.io/kowlor/pen/ZYYQoy

.Stars {
	background-color: #220022;
	background-image: radial-gradient(ellipse farthest-corner at 45px 45px, #360036 0%, black 50%, #360036 95%);
}


.Stars .star {
  position: absolute;
  background-color: #F8F8F8;
  border-radius: 100%;
}

.Stars > {
	.star:nth-child(1) {
	top: 34vh;
	left: 44vw;
	width: 3px;
	height: 3px;
	opacity: 0.8;
	box-shadow: 0 0 14px 2px rgba(255, 255, 213, 0.3);
	-webkit-animation: shimmer 0.4s 59s;
	animation: shimmer 0.4s 59s;
	}


	.mixin-loop (@i) when (@i > 0) {

		@top: random(@i) * 1vh;
		@top: `Math.random() * @i`;


		// Output the current counter
		.star:nth-child(@{i}) {
			background: hsl(@i * 10, 50%, 50%);
			top:@top;
		}
		
		// The mixin calls itself, recursively,
		// until the "@i > 0" condition is no longer met
		.mixin-loop(@i - 1);
	}

	.mixin-loop(36);



}








@keyframes shimmer {
  10% { opacity: 0; }
  20% { opacity: 1; }
  30% { opacity: 0; }
  40% { opacity: 1; }
  50% { opacity: 0; }
  60% { opacity: 1; }
  70% { opacity: 0; }
  80% { opacity: 1; }
}




// Create a "guarded" mixin with conditional test
.mixin-loop (@i) when (@i > 0) {
  // Output the current counter
  div:nth-child(@{i})::after {
    content: "@i == @{i}";
    background: hsl(@i * 10, 50%, 50%);
  }
  
  // The mixin calls itself, recursively,
  // until the "@i > 0" condition is no longer met
  .mixin-loop(@i - 1);
}

// Call the mixin with a counter to start the loop
.mixin-loop(36);



// styles...

body {
  align-items: stretch;
  align-content: stretch;
  display: flex;
  flex-wrap: wrap;
  height: 100vh;
}

div {
  display: flex;
  flex: 1 0 auto;
  white-space: nowrap;
  
  &::after {
    align-items: center;
    display: flex;
    flex: 1 0 auto;
    justify-content: center;
    padding: 0.5em 1em;
  }
}

